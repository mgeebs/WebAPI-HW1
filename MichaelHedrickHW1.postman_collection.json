{
	"id": "29d0a77c-45f9-7cfd-550c-4072f0612885",
	"name": "MichaelHedrickHW1",
	"description": "This is a postman collection for Homework 1 in Web API.  This is my first time using postman.",
	"order": [
		"d18b98e3-846e-3a14-6286-83e7287dad96",
		"0dcf5ce0-ee47-4ffe-c9e5-be1440f19cf5"
	],
	"folders": [],
	"folders_order": [],
	"timestamp": 0,
	"owner": "3599339",
	"public": false,
	"events": [],
	"variables": [],
	"auth": null,
	"requests": [
		{
			"id": "0dcf5ce0-ee47-4ffe-c9e5-be1440f19cf5",
			"headers": "",
			"headerData": [],
			"url": "https://www.googleapis.com/books/v1/volumes/{{id}}",
			"folder": null,
			"queryParams": [],
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "6ea872d9-8da6-4003-8136-76ea5a52edf1",
						"type": "text/javascript",
						"exec": [
							"tests[\"1.id match\"] = (responseBody.has(pm.environment.get(\"id\")));",
							"tests[\"2.response code 200 (ok)\"] = (responseCode.code === 200);"
						]
					}
				}
			],
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"auth": null,
			"time": 1517589426586,
			"name": "Volume",
			"description": null,
			"collectionId": "29d0a77c-45f9-7cfd-550c-4072f0612885",
			"responses": [],
			"preRequestScript": null,
			"tests": "tests[\"1.id match\"] = (responseBody.has(pm.environment.get(\"id\")));\ntests[\"2.response code 200 (ok)\"] = (responseCode.code === 200);",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "d18b98e3-846e-3a14-6286-83e7287dad96",
			"headers": "",
			"headerData": [],
			"url": "https://www.googleapis.com/books/v1/volumes?q={{book_title}}",
			"folder": null,
			"queryParams": [
				{
					"key": "q",
					"value": "{{book_title}}",
					"equals": true,
					"description": "",
					"enabled": true
				}
			],
			"events": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4ce0e280-601b-4f23-942b-9cb7f512aec8",
						"type": "text/javascript",
						"exec": [
							"pm.environment.set(\"book_title\", \"Turing\");",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8e7bba67-d7cb-4abe-b373-0f465d4f54fd",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"var titlePass = true;      // False if a title doesn't contain Turing",
							"var responseCodeOk = true; // False if there is a bad response",
							"",
							"for(i = 0; i < jsonData.items.length; i++) {",
							"    var title = jsonData.items[i].volumeInfo.title;",
							"    var patt = /turing/i;",
							"    var res = patt.test(title);",
							"    if (res === false) {",
							"        titlePass = false;          // A title was found without \"Turing\"",
							"    }",
							"    if (responseCode.code != 200) {",
							"        responseCodeOk = false;     // There was a problem with the response",
							"    }",
							"}",
							"var id = jsonData.items[0].id;      // Get the ID of the first book to test",
							"// Set the environment variable for the next test",
							"postman.setEnvironmentVariable(\"id\", id);",
							"",
							"tests[\"1.book title test\"] = (titlePass === true);",
							"tests[\"2.response status code 200 (ok)\"] = (responseCodeOk === true);"
						]
					}
				}
			],
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"auth": null,
			"time": 1517589421191,
			"name": "Books",
			"description": "This request find books with Turig in the title.",
			"collectionId": "29d0a77c-45f9-7cfd-550c-4072f0612885",
			"responses": [],
			"preRequestScript": "pm.environment.set(\"book_title\", \"Turing\");\n",
			"tests": "var jsonData = JSON.parse(responseBody);\nvar titlePass = true;      // False if a title doesn't contain Turing\nvar responseCodeOk = true; // False if there is a bad response\n\nfor(i = 0; i < jsonData.items.length; i++) {\n    var title = jsonData.items[i].volumeInfo.title;\n    var patt = /turing/i;\n    var res = patt.test(title);\n    if (res === false) {\n        titlePass = false;          // A title was found without \"Turing\"\n    }\n    if (responseCode.code != 200) {\n        responseCodeOk = false;     // There was a problem with the response\n    }\n}\nvar id = jsonData.items[0].id;      // Get the ID of the first book to test\n// Set the environment variable for the next test\npostman.setEnvironmentVariable(\"id\", id);\n\ntests[\"1.book title test\"] = (titlePass === true);\ntests[\"2.response status code 200 (ok)\"] = (responseCodeOk === true);",
			"currentHelper": null,
			"helperAttributes": null
		}
	]
}